<!--

  generic Scala project buildfile

-->
<project xmlns:ivy="antlib:org.apache.ivy.ant" basedir="." default="package">

  <macrodef name="assert-dir-exists" description="Asserts that a given variable name is set and the value is a file/directory that exists">
	<attribute name="var" />
  	<sequential>
  	  <fail unless="@{var}" message="@{var} is not set - check your local.properties" />
  	  <available type="dir" file="${@{var}}" property="@{var}.available" />
  	  <fail unless="@{var}.available" message="@{var} is set but ${@{var}} is not a directory." />
  	</sequential>
  </macrodef>

  <property file="build.properties" />
  <property file="local.properties" />
  
  <property name="src.scala" value="src/main/scala" />
  <property name="src.java" value="src/main/java" />
  <path id="java+scala.srcpath">
  	<path path="${src.scala}" />
  	<path path="${src.java}" />
  </path>
	
  <fileset id="runtime.jars" dir="lib/runtime" includes="**/*.jar" />
	
  <path id="build.classpath">
    <fileset dir="lib/runtime" includes="**/*.jar" />
    <fileset dir="lib/build" includes="**/*.jar" />
  </path>
	
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="build.classpath" />
  <taskdef resource="scala/tools/ant/antlib.xml" classpathref="build.classpath" />
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpath="lib/runtime/aspectj/aspectjtools.jar" />
  
  <target name="-checks">
  </target>
  
  <target name="clean">
  	<delete dir="bin" />
    <delete dir="target" />
  </target>
  
  <target name="compile" depends="-checks" description="Compile source files into target directory">
    <mkdir dir="target/${war.name}/WEB-INF/classes" />
  	<mkdir dir="target/unwoven" />
  	<mkdir dir="target/log" />
  	<path id="build+built.classpath">
  		<path refid="build.classpath" />
  		<path location="target/unwoven" />
  	</path>
    <scalac deprecation="on" unchecked="on" optimise="yes" debuginfo="yes"
    	srcref="java+scala.srcpath"
    	destdir="target/unwoven" classpathref="build+built.classpath" />
  	<javac srcdir="${src.java}" destdir="target/unwoven" classpathref="build+built.classpath" />
  	
  	<iajc
        inpath="target/unwoven"
        destdir="target/${war.name}/WEB-INF/classes" 
        classpathref="build.classpath"
  		verbose="false"
        aspectpath="lib/runtime/spring/org.springframework.aspects-3.1.0.RC1.jar"
    	  log="target/log/iajc.log" />
  	<!-- bamboo's ant doesn't have resourcecontains
  	<fail message="iajc errors" taskname="iajc">
  	    <condition><resourcecontains resource="target/log/iajc.log" substring="[error]"/></condition>
  	</fail>
  	-->
  </target>

  <target name="package" depends="compile" description="Compile and package application into a WAR file">
    
    <copy todir="target/${war.name}">
      <fileset dir="src/main/webapp"/>
    </copy>
    
    <copy todir="target/${war.name}/WEB-INF/classes">
      <fileset dir="src/main/resources" />
    </copy>
  	
  	<tstamp>
  		<format property="build.time" pattern="yyyy-MM-dd'T'HH:mm:ssZ" />
  	</tstamp>
  	<propertyfile file="target/${war.name}/WEB-INF/build.properties" comment="Generated by the 'package' target of build.xml.">
  		<entry key="build.time" value="${build.time}" />
  	</propertyfile>
    
    <mkdir dir="target/${war.name}/WEB-INF/lib"/>
    <copy todir="target/${war.name}/WEB-INF/lib" flatten="true">
      <fileset refid="runtime.jars" />
    </copy>
    
    <mkdir dir="dist"/>
    <war warfile="dist/${war.name}" basedir="target/${war.name}" />
    <length file="dist/${war.name}" property="war.length" />
    <echo message="Generated WAR of ${war.length} bytes" />
    
  </target>
	
  <!-- Copy unpacked war directory to deploy.dir -->
  <target name="dev-deploy-unpacked" depends="package">
  	<assert-dir-exists var="deploy.dir" />
    <sync todir="${deploy.dir}/${war.name}">
      <fileset dir="target/${war.name}" />
    </sync>
  	<touch file="${deploy.dir}/${war.name}/WEB-INF/web.xml" />
  </target>
	
  <target name="dev-deploy-views">
  	<assert-dir-exists var="deploy.dir" />
    <sync todir="${deploy.dir}/${war.name}/WEB-INF/freemarker">
      <fileset dir="src/main/webapp/WEB-INF/freemarker" />
    </sync>
  </target>
	
  <target name="dev-deploy-static">
  	<assert-dir-exists var="deploy.dir" />
    <sync todir="${deploy.dir}/${war.name}/static">
      <fileset dir="src/main/webapp/static" />
    </sync>
  </target>
	
  <target name="list-runtime-jars" description="Print sorted list of runtime jars, to check for duplicates.">
  	<pathconvert pathsep="&#xA;" property="jars" refid="runtime.jars" preserveduplicates="true">
  	    <mapper type="flatten" />
  	</pathconvert>
  	<sortlist delimiter="&#xA;" value="${jars}" property="jars.sorted"  />
  	<echo message="${jars.sorted}" taskname="" />
  </target>

  <target name="test" depends="compile" description="Run unit tests.">
    <path id="test.classpath">
      <path location="src/test/resources" />
      <path refid="build.classpath" />
      <fileset dir="lib/test" includes="**/*.jar" />
      <path location="src/main/webapp" />
      <path location="target/${war.name}/WEB-INF/classes" />
      <path location="target/test" />
    </path>
    
    <mkdir dir="target/test" />
    <scalac srcdir="src/test/scala" destdir="target/test" classpathref="test.classpath" deprecation="true" />
  	<path id="test+built.classpath">
  	  		<path refid="test.classpath" />
  	  		<fileset dir="target/test" />
  	</path>
  	<javac srcdir="src/test/scala" destdir="target/test" classpathref="test+built.classpath" />
  	
  	
    <mkdir dir="target/test-results" />
    <junit fork="true" haltonfailure="yes">
      <jvmarg value="-XX:MaxPermSize=512M" />
      <classpath refid="test.classpath" />
      <formatter type="xml" />
      <formatter type="plain" usefile="no" />
      <batchtest todir="target/test-results">
        <fileset dir="target/test">
          <include name="**/*TestCase.class"/>
          <include name="**/*Test.class"/> 
          <include name="**/*Tests.class"/>
          <exclude name="**/Abstract*.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!--
  See hib-build.cfg.xml for rant on why this doesn't work very well and
  why we should probably just delete it
  -->
  <target name="generate-ddl" depends="compile">
  	
  	<!-- Hibernate tool only seems able to load classes from jars, so jar up the classes
  		for it to find the annotation entities -->
  	<jar basedir="target/${war.name}/WEB-INF/classes" file="target/all-classes.jar" />
  	
  	<path id="hbm.classpath">
  		<path refid="build.classpath" />
  		<fileset file="target/all-classes.jar" />
  	</path>
  	<taskdef name="hibernate"
        classname="org.hibernate.tool.ant.HibernateToolTask"
        classpathref="hbm.classpath"/>
  	
  	<mkdir dir="target/ddl" />
  	<hibernate destdir="target/ddl">
  	  <annotationconfiguration configurationfile="hib-build.cfg.xml"/>
  	  <hbm2ddl export="false"
  	  	create="true"
  		delimiter=";"
  		format="true"
  	  	outputfilename="schema.sql"
  	  />
  	</hibernate>
  </target>

</project>