<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://go.warwick.ac.uk/elab-schemas/filterstack http://go.warwick.ac.uk/elab-schemas/filters.xsd">
	
	<bean id="hibernateLifecycle" class="uk.ac.warwick.tabula.data.HibernateLifecycle" />
	
	<import resource="hibernate-packages-context.xml" />
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:packagesToScan-ref="hibernatePackages"
		p:lobHandler-ref="lobHandler"
		p:hibernateProperties-ref="hibernateProperties">
		<property name="eventListeners"><map>
			<entry key="pre-load" value-ref="hibernateLifecycle" />
			<entry key="post-load" value-ref="hibernateLifecycle"/>
			<entry key="pre-update" value-ref="hibernateLifecycle"/>
			<entry key="pre-insert" value-ref="hibernateLifecycle"/>
		</map></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<beans profile="console">
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		    <property name="url" value="${db.url}"/>
		    <property name="username" value="${db.username}"/>
		    <property name="password" value="${db.password}"/>
		    <property name="connectionProperties">
		    	<props>
		    		<prop key="defaultNChar">true</prop>
		    	</props>
		    </property>
		</bean>
		
		<bean id="academicDataStore" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		    <property name="url" value="${ads.db.url}"/>
		    <property name="username" value="${ads.db.username}"/>
		    <property name="password" value="${ads.db.password}"/>
		</bean>
		
		<bean id="sitsDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		    <property name="url" value="${sits.db.url}"/>
		    <property name="username" value="${sits.db.username}"/>
		    <property name="password" value="${sits.db.password}"/>
		</bean>
		
		<bean id="membershipDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		    <property name="url" value="${membership.db.url}"/>
		    <property name="username" value="${membership.db.username}"/>
		    <property name="password" value="${membership.db.password}"/>
		</bean>
		
		<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
	    	<property name="nativeJdbcExtractor">
	    		<bean class="org.springframework.jdbc.support.nativejdbc.OracleJdbc4NativeJdbcExtractor" />
	    	</property>
	    </bean>
	</beans>
	
	<beans profile="dev,production,console">
	
		<bean class="uk.ac.warwick.tabula.system.DatabaseEncodingChecker"
			c:sessionFactory-ref="sessionFactory"
		 />
		<util:properties id="jdbcProperties">
			<prop key="defaultNChar">true</prop>
		</util:properties>
		<util:properties id="hibernateProperties">
			<prop key="hibernate.jdbc.batch_size">20</prop>
			<prop key="hibernate.dialect">uk.ac.warwick.tabula.data.oracle.Oracle10gDialect</prop>
			<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
			<prop key="defaultNChar">true</prop>
		</util:properties>
		
		<bean id="mainDatabaseDialect" class="uk.ac.warwick.tabula.data.oracle.Oracle10gDialect" />
		
		<bean id="memberInterface" class="uk.ac.warwick.membership.MembershipInterfaceWrapper">
			<property name="membershipInterface">
				<bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" autowire-candidate="false">
					<property name="serviceUrl" value="${membership.rmi.serviceUrl}" />
					<property name="serviceInterface" value="uk.ac.warwick.membership.MemberInterface" />
				</bean>	
			</property>
			<property name="auth">
				<bean class="uk.ac.warwick.membership.Auth" autowire-candidate="false">
					<property name="serviceName" value="${membership.rmi.auth.serviceName}" />
					<property name="userName" value="${membership.rmi.auth.username}" />
					<property name="password" value="${membership.rmi.auth.password}" />
				</bean>		
			</property>
		</bean>
		
	</beans>
	
	<beans profile="dev,production">	
	
		<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
	    	<property name="nativeJdbcExtractor">
	    		<!-- <bean class="org.springframework.jdbc.support.nativejdbc.OracleJdbc4NativeJdbcExtractor" /> -->
	    		<bean class="org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor" />
	    	</property>
	    </bean>
		
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName" value="java:/TabulaDS"/>
	    </bean>
	    
	    <bean id="academicDataStore" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName" value="java:/AcademicDS"/>
	    </bean>
	    
	    <bean id="sitsDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName" value="java:/SITSDS"/>
	    </bean>
	    
	    <bean id="membershipDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName" value="java:/MembershipDS"/>
	    </bean>
	    
	</beans>
	
	<beans profile="test">
		<jdbc:embedded-database id="dataSource" />
		
		<jdbc:embedded-database id="academicDataStore" />
		
		<jdbc:embedded-database id="sitsDataSource" />
		
		<jdbc:embedded-database id="membershipDataSource" />
			
		<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />
		
		<bean id="mainDatabaseDialect" class="org.hibernate.dialect.HSQLDialect" />

		<import resource="hibernate-test-scripts-context.xml" />

		<bean id="dataSourceInitialiser" class="uk.ac.warwick.tabula.system.DatabaseScriptRunner" 
			p:dataSource-ref="dataSource"
			p:scripts-ref="testScripts" />
			
		<bean id="adsInit" class="uk.ac.warwick.tabula.system.DatabaseScriptRunner" 
			p:dataSource-ref="academicDataStore"
			p:scripts="ads.sql" />
			
		<bean id="sitsInit" class="uk.ac.warwick.tabula.system.DatabaseScriptRunner" 
			p:dataSource-ref="sitsDataSource"
			p:scripts="sits.sql" />
			
		<bean id="membershipInit" class="uk.ac.warwick.tabula.system.DatabaseScriptRunner" 
			p:dataSource-ref="membershipDataSource"
			p:scripts="membership.sql" />
		
		<util:properties id="hibernateProperties">
			<prop key="hibernate.jdbc.batch_size">20</prop>
			<prop key="hibernate.dialect">uk.ac.warwick.tabula.data.hsql.HSQLDialect</prop>
			<prop key="hibernate.hbm2ddl.auto">create</prop>
			<!-- <prop key="hibernate.show_sql">true</prop>  -->
		</util:properties>
		
		<bean id="memberInterface" class="uk.ac.warwick.membership.MembershipInterfaceWrapper" />
		
	</beans>

</beans>
