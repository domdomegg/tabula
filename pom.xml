<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>uk.ac.warwick</groupId>
		<artifactId>warwick</artifactId>
		<version>4</version>
	</parent>

	<groupId>uk.ac.warwick.tabula</groupId>
	<artifactId>tabula-project</artifactId>
	<version>23</version>
	<packaging>pom</packaging>

	<name>Tabula</name>
	<description>
  		Tabula is a tool to support the administration of teaching and learning in academic departments. 
  		It's also referred to as My Department.
  	</description>
	<url>http://warwick.ac.uk/tabula</url>

	<!-- I N C E P T I O N -->
	<inceptionYear>2012</inceptionYear>

	<properties>
		<scala.version>2.9.1</scala.version>
		<org.springframework.version>3.1.0.RELEASE</org.springframework.version>
		<org.apache.lucene.version>4.0.0</org.apache.lucene.version>
		<net.databinder.dispatch.version>0.8.8</net.databinder.dispatch.version>
		<org.apache.poi.version>3.8</org.apache.poi.version>
		<org.apache.tiles.version>2.2.2</org.apache.tiles.version>
		<warwickutils.version>20130102-1437</warwickutils.version>

		<tabula.basedir>${project.basedir}</tabula.basedir>
		<tabula.module.context>/${project.artifactId}</tabula.module.context>
	</properties>

	<!-- ====================================================================== -->
	<!-- S C M -->
	<!-- ====================================================================== -->
	<scm>
		<developerConnection>scm:git:ssh://git@repo.elab.warwick.ac.uk/TAB/tabula.git</developerConnection>
		<url>https://repo.elab.warwick.ac.uk/projects/TAB/repos/tabula/browse</url>
	</scm>

	<!-- ====================================================================== -->
	<!-- I S S U E M A N A G E M E N T -->
	<!-- ====================================================================== -->
	<issueManagement>
		<system>jira</system>
		<url>https://bugs.elab.warwick.ac.uk/browse/TAB</url>
	</issueManagement>

	<!-- ====================================================================== -->
	<!-- C I M A N A G E M E N T -->
	<!-- ====================================================================== -->
	<ciManagement>
		<system>Bamboo</system>
		<url>http://build.elab.warwick.ac.uk/browse/TAB</url>
	</ciManagement>

	<modules>
		<module>modules/common</module>
		<module>modules/home</module>
		<module>modules/coursework</module>
		<module>modules/profiles</module>
		<module>modules/scheduling</module>
	</modules>

	<profiles>
		<profile>
			<id>all</id>
		</profile>
		
		<profile>
			<id>functional-test</id>
			<modules>
				<module>modules/functional-test</module>
			</modules>
		</profile>

		<profile>
			<id>deploy</id>

			<build>
				<defaultGoal>install</defaultGoal>

				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${tabula.basedir}/local.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dev-deploy-views</id>

			<build>
				<defaultGoal>process-resources</defaultGoal>

				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${tabula.basedir}/local.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- sync static -->
		<profile>
			<id>dev-deploy-static</id>

			<build>
				<defaultGoal>package</defaultGoal>

				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${tabula.basedir}/local.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>war</id>

			<!-- TODO we need to think of a better way to do this, this activation 
				means it'll be active on all modules EXCEPT common and the project itself, 
				which is probably okay but we could have modules which aren't wars but also 
				aren't common - e.g. if we moved static content out of home and into its 
				own module. -->
			<activation>
				<file>
					<exists>src/main/webapp/WEB-INF/.war-project</exists>
				</file>
			</activation>

			<build>
				<testResources>
					<testResource>
						<targetPath>WEB-INF</targetPath>
						<directory>${basedir}/src/main/webapp/WEB-INF</directory>
					</testResource>
					<testResource>
						<directory>${basedir}/src/test/resources</directory>
					</testResource>
				</testResources>

				<plugins>
					<!-- Build the war -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exploded</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<warName>${project.build.finalName}</warName>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-build-timestamp</id>
								<phase>prepare-package</phase>
								<configuration>
									<target>
										<tstamp>
											<format property="build.time" pattern="yyyy-MM-dd'T'HH:mm:ssZ" />
										</tstamp>
										<propertyfile
											file="${project.build.directory}/${project.build.finalName}/WEB-INF/build.properties"
											comment="Generated by maven.">
											<entry key="build.time" value="${build.time}" />
											<entry key="module.name" value="${project.artifactId}" />
											<entry key="module.context" value="${tabula.module.context}" />
										</propertyfile>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>copy-resource-dependencies</id>
								<phase>process-test-resources</phase>
								<configuration>
									<target>
										<!-- We need to touch first otherwise Ant will overwrite any files 
											that are older -->
										<touch>
											<fileset dir="${project.build.testOutputDirectory}" />
										</touch>
										<copy todir="${project.build.testOutputDirectory}/WEB-INF"
											overwrite="false">
											<fileset
												dir="${tabula.basedir}/modules/common/src/main/webapp/WEB-INF" />
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<!-- Also make a JAR file for use in other components -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<id>make-a-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<classifier>jar</classifier>
									<archive>
										<manifest>
											<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<packaging>jar</packaging>
									<artifactId>${project.artifactId}</artifactId>
									<groupId>${project.groupId}</groupId>
									<version>${project.version}</version>
									<classifier>jar</classifier>
									<file>
										${project.build.directory}/${project.build.finalName}-jar.jar
									</file>
								</configuration>
							</execution>
						</executions>
					</plugin> 
				</plugins>
			</build>

			<dependencies>
				<!-- Project dependencies -->
				<dependency>
					<groupId>uk.ac.warwick.tabula</groupId>
					<artifactId>common</artifactId>
				</dependency>
				<dependency>
					<groupId>uk.ac.warwick.tabula</groupId>
					<artifactId>common</artifactId>
					<type>test-jar</type>
					<scope>test</scope>
				</dependency>

				<!-- http://jira.codehaus.org/browse/MNG-1378 "By design, test dependencies 
					are not transitive" So need to include any test dependencies in common here -->
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
					<version>${org.springframework.version}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<version>2.2.9</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.lucene</groupId>
					<artifactId>lucene-test-framework</artifactId>
					<version>${org.apache.lucene.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<!-- Need to add the local repository in order to get the parent pom -->
	<repositories>
		<repository>
			<id>nexus</id>
			<name>Internal Nexus Repository</name>
			<url>http://mvn.elab.warwick.ac.uk/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- ====================================================================== -->
	<!-- R E P O R T I N G -->
	<!-- ====================================================================== -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
		</plugins>
	</reporting>

	<!-- ====================================================================== -->
	<!-- B U I L D -->
	<!-- ====================================================================== -->
	<build>
		<defaultGoal>install</defaultGoal>

		<plugins>
			<!-- Scala support in maven -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<outputDirectory>${tabula.basedir}/dist</outputDirectory>
						<warName>${project.artifactId}</warName>

						<!-- Overlay WEB-INF from common onto other WEB-INFs -->
						<overlays>
							<overlay>
								<groupId>uk.ac.warwick.tabula</groupId>
								<artifactId>common</artifactId>
								<type>jar</type>
								<includes>
									<include>WEB-INF/**/*</include>
								</includes>
							</overlay>
							<overlay>
								<groupId>uk.ac.warwick.tabula</groupId>
								<artifactId>home</artifactId>
								<type>zip</type>
								<classifier>static-hashes</classifier>
								<includes>
									<include>WEB-INF/**/*</include>
								</includes>
							</overlay>
						</overlays>
					</configuration>
				</plugin>

				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<!-- To compress and minify JS files -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>1.1</version>
				</plugin>

				<plugin>
					<groupId>org.lesscss</groupId>
					<artifactId>lesscss-maven-plugin</artifactId>
					<version>1.3.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<forkMode>always</forkMode>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.alchim31.maven
										</groupId>
										<artifactId>
											scala-maven-plugin
										</artifactId>
										<versionRange>
											[3.1.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-assembly-plugin
										</artifactId>
										<versionRange>
											[2.2-beta-5,)
										</versionRange>
										<goals>
											<goal>single</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.alchim31.maven
										</groupId>
										<artifactId>
											yuicompressor-maven-plugin
										</artifactId>
										<versionRange>
											[1.1,)
										</versionRange>
										<goals>
											<goal>compress</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- ====================================================================== -->
	<!-- D E P E N D E N C I E S -->
	<!-- ====================================================================== -->
	<dependencies>
		<!-- "Provided" dependencies are provided by Jboss -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Define xerces and xmlParserAPIs as provided to avoid them being packaged 
			by a transitive dependency in the war -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.9.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xmlParserAPIs</artifactId>
			<version>2.6.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.3.04</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jmock</groupId>
			<artifactId>jmock-cglib</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-tools.testing</groupId>
			<artifactId>specs_${scala.version}</artifactId>
			<version>1.6.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.version}</artifactId>
			<version>2.0.M5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>

		<!-- Non-provided/test dependencies -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>github.com.ingoem</groupId>
			<artifactId>scala-react_2.9.1</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.jsuereth</groupId>
			<artifactId>scala-arm_${scala.version}</artifactId>
			<version>1.2</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Project dependencies -->
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>home</artifactId>
				<version>${project.version}</version>
				<type>zip</type>
				<classifier>static-hashes</classifier>
			</dependency>
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>common</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>courses</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
				<classifier>jar</classifier>
			</dependency>
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>profiles</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
				<classifier>jar</classifier>
			</dependency>
			<dependency>
				<groupId>uk.ac.warwick.tabula</groupId>
				<artifactId>home</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
				<classifier>jar</classifier>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
