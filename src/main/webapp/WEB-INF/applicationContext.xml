<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://go.warwick.ac.uk/elab-schemas/filterstack http://go.warwick.ac.uk/elab-schemas/filters.xsd">

	<!-- fire up annotation driven everything -->
	<context:spring-configured />
	<context:annotation-config />
	<context:component-scan base-package="uk.ac.warwick.courses.web.controllers" />
	<context:component-scan base-package="uk.ac.warwick.courses.services" />
	<context:component-scan base-package="uk.ac.warwick.courses.data" />
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages" />
	
	<!-- make properties available as ${..} tokens -->
	<context:property-placeholder location="
		classpath:/default.properties,
		classpath:/courses.properties,
		classpath:/courses-private.properties" />
	
	<bean class="uk.ac.warwick.courses.events.EventLoggingAspect" factory-method="aspectOf">
		<property name="listener" ref="eventListener" />
	</bean>
	
	<bean id="eventListener" class="uk.ac.warwick.courses.events.CompositeEventListener">
		<constructor-arg>
			<list>
				<bean class="uk.ac.warwick.courses.events.Log4JEventListener" />
				<bean class="uk.ac.warwick.courses.events.DatabaseEventListener" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="json" class="uk.ac.warwick.courses.JsonObjectMapperFactory" />
	
	<!-- Catches all exceptions that go through Spring.
		If an exception escapes Spring, it will go to the handler in web.xml,
		which is served by the ErrorController at /error/, which delegates to this.
		So this should be handling all exceptions.
	 -->
	<bean class="uk.ac.warwick.courses.system.ExceptionResolver" p:order="0"
		p:defaultView="errors/500">
		<property name="viewMappings">
			<map>
				<entry key="uk.ac.warwick.courses.PermissionDeniedException" value="errors/permissionDenied" />
				<entry key="uk.ac.warwick.courses.ItemNotFoundException" value="errors/404" />
			</map>
		</property>
	</bean>
	
	<!-- validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" 
		p:validationMessageSource-ref="messageSource" />
	
	<bean id="typeConverter"
      class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
      <description>
      	Converts arguments in various places.
      	Useful to convert @PathVariable arguments from String to the object it represents.
      </description>
	    <property name="converters">
	        <list>
	            <bean class="uk.ac.warwick.courses.data.convert.DepartmentCodeConverter"/>
	            <bean class="uk.ac.warwick.courses.data.convert.ModuleCodeConverter"/>
	            <bean class="uk.ac.warwick.courses.data.convert.AssignmentIdConverter"/>
	            <bean class="uk.ac.warwick.courses.data.convert.FileAttachmentIdConverter"/>
	        </list>
	    </property>
	    <property name="formatters">
	    	<list>
	            <bean class="uk.ac.warwick.courses.data.convert.FileAttachmentIdConverter"/>
	        </list>
	    </property>
	</bean>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="uk.ac.warwick.courses.system.CurrentUserInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="uk.ac.warwick.courses.system.RequestInfoInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="uk.ac.warwick.courses.system.ConditionalInterceptor" p:excludePath="/static/*">
				<constructor-arg>
					<bean class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor" autowire="byName" />
				</constructor-arg>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="propertyEditorRegistrar" class="uk.ac.warwick.courses.system.CommonPropertyEditors" />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer" 
		p:conversionService-ref="typeConverter"
		p:validator-ref="validator"
		p:propertyEditorRegistrar-ref="propertyEditorRegistrar" /> 
	<bean id="requestMappingHandlerAdapter" class="uk.ac.warwick.courses.system.HandlerAdapter" p:order="0"
		p:webBindingInitializer-ref="webBindingInitializer">
		<property name="customArgumentResolvers">
			<list>
				<bean class="uk.ac.warwick.courses.system.CurrentUserMethodArgumentResolver" />
			</list>
		</property>
		<property name="customPreReturnValueHandlers">
			<list>
				<bean class="uk.ac.warwick.courses.system.MavReturnValueHandler" />
			</list>
		</property>
	</bean>
		
	<tx:annotation-driven mode="aspectj" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- get app server to handle static content -->
	<mvc:default-servlet-handler />
	
	<bean id="characterEncodingFilter" class="org.springframework.web.filter.CharacterEncodingFilter"
		p:encoding="UTF-8" p:forceEncoding="true" />
		
	<bean id="oAuthFilter" class="uk.ac.warwick.sso.client.oauth.OAuthFilter" />
	
	<filter-stack id="allFilters" xmlns="http://go.warwick.ac.uk/elab-schemas/filterstack">
		<mapping>
			<filter ref="characterEncodingFilter" />
			<url-pattern>/*</url-pattern>
			<excluded-url-pattern>/static/*</excluded-url-pattern>
			<excluded-url-pattern>/favicon.ico</excluded-url-pattern>
			<excluded-url-pattern>*.ftl</excluded-url-pattern>
		</mapping>
		<mapping>
			<filter ref="ssoClientFilter" />
			<filter ref="oAuthFilter" />
			<url-pattern>/*</url-pattern>
			<excluded-url-pattern>/static/*</excluded-url-pattern>
			<excluded-url-pattern>/favicon.ico</excluded-url-pattern>
			<excluded-url-pattern>*.ftl</excluded-url-pattern>
			<excluded-url-pattern>/test/*</excluded-url-pattern>
		</mapping>
		<mapping>
			<filter ref="forceLoginFilter" />
			<filter ref="sysadminGroupFilter" />
			<url-pattern>/sysadmin/*</url-pattern>
			<excluded-url-pattern>*.ftl</excluded-url-pattern>
		</mapping>
	</filter-stack>
	
	<bean id="ssoClientFilter" class="uk.ac.warwick.sso.client.SSOClientFilter"
		p:detectAnonymousOnCampusUsers="true"
		p:userLookup-ref="userLookup"
		p:configLocation="/courses-sso-config.xml" />
		
	<bean id="forceLoginFilter" class="uk.ac.warwick.sso.client.ForceLoginFilter" />
	
	<bean id="sysadminGroupFilter" class="uk.ac.warwick.sso.client.UserInWebGroupFilter"
		p:group="in-courses-sysadmins"
		p:groupService="#{realUserLookup.groupService}" />
		<!-- FIXME groupservice wont be switched out for a maintenance version -->
	
	<bean id="userLookup" class="uk.ac.warwick.courses.services.SwappableUserLookupService">
		<constructor-arg ref="realUserLookup" />
	</bean>
	
	<bean id="realUserLookup" class="uk.ac.warwick.userlookup.UserLookup" autowire-candidate="false"
		p:ssosUrl="${ssoclient.ssos.url}"
		p:groupServiceLocation="${ssoclient.webgroups.url}" />
	
	<!-- <util:property-path id="groupService" path="userLookup.groupService"/> -->
 	
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
		p:templateLoaderPath="/WEB-INF/freemarker/"
		p:configuration-ref="freemarkerConfiguration" />
		
	<bean id="freemarkerConfiguration" class="uk.ac.warwick.courses.web.views.ScalaFreemarkerConfiguration">
		<property name="sharedVariables">
			<map>
				<entry key="url"><bean class="uk.ac.warwick.courses.web.views.UrlMethodModel" /></entry>
				<entry key="rootUrl" value="${toplevel.url}" />
				<entry key="userlookup"><bean class="uk.ac.warwick.courses.web.views.UserLookupTag" /></entry>
				<entry key="permissions"><bean class="uk.ac.warwick.courses.web.views.PermissionFunction" /></entry>
				<entry key="theYear"><bean class="uk.ac.warwick.courses.web.views.TheYear" /></entry>
			</map>
		</property>
	</bean>
	<bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
		<property name="attributes"><map>
			<entry key="freemarkerConfiguration" value-ref="freemarkerConfiguration" />
		</map></property>
	</bean>
			
	<bean id="redirectViewResolver" class="uk.ac.warwick.courses.web.views.RedirectViewResolver" 
		p:toplevelUrl="${toplevel.url}"
		p:order="1" />
	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver"
		p:order="2" />
  	
  	<bean id="hibernateLifecycle" class="uk.ac.warwick.courses.data.HibernateLifecycle" />
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:packagesToScan="uk.ac.warwick.courses.data.model"
		p:lobHandler-ref="lobHandler"
		p:hibernateProperties-ref="hibernateProperties">
		<property name="eventListeners"><map>
			<entry key="pre-load" value-ref="hibernateLifecycle" />
			<entry key="post-load" value-ref="hibernateLifecycle"/>
			<entry key="pre-update" value-ref="hibernateLifecycle"/>
			<entry key="pre-insert" value-ref="hibernateLifecycle"/>
		</map></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
		
	<bean id="parser" class="org.springframework.expression.spel.standard.SpelExpressionParser"/>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	
	
	<beans profile="scheduling">
		<!-- @Scheduled -->
		<task:annotation-driven/>
	</beans>
	
	<beans profile="web">
		
	</beans>
	
	<beans profile="dev,production">
	
		<bean id="realUserLookup" class="uk.ac.warwick.userlookup.UserLookup"
			p:ssosUrl="${ssoclient.ssos.url}"
			p:groupServiceLocation="${ssoclient.webgroups.url}" />
	
		<bean class="uk.ac.warwick.courses.system.DatabaseEncodingChecker" />
		
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName" value="java:/CoursesDS"/>
	    </bean>
	    
	    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
	    	<property name="nativeJdbcExtractor">
	    		<!-- <bean class="org.springframework.jdbc.support.nativejdbc.OracleJdbc4NativeJdbcExtractor" /> -->
	    		<bean class="org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor" />
	    	</property>
	    </bean>
	    
		<util:properties id="jdbcProperties">
			<prop key="defaultNChar">true</prop>
		</util:properties>
		<util:properties id="hibernateProperties">
			<prop key="hibernate.jdbc.batch_size">20</prop>
			<prop key="hibernate.dialect">uk.ac.warwick.courses.data.oracle.Oracle10gDialect</prop>
			<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
			<prop key="defaultNChar">true</prop>
		</util:properties>
		
		<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
			p:definitions="/WEB-INF/defs/views.xml"
			p:definitionsFactoryClass="uk.ac.warwick.courses.ImpliedDefinitionsFactory">
			<property name="tilesProperties">
				<props>
					<prop key="#{T(org.apache.tiles.definition.DefinitionsFactory).DEFINITION_DAO_INIT_PARAM}">
						org.apache.tiles.definition.dao.ResolvingLocaleUrlDefinitionDAO
					</prop>
				</props>
			</property>
		</bean>
			
	</beans>
	
	<beans profile="test">
		<jdbc:embedded-database id="dataSource" />
		
		<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

		<bean class="uk.ac.warwick.courses.system.DatabaseScriptRunner" 
			c:dataSource-ref="dataSource"
			p:scripts="schema.sql,data.sql" />
		
		<util:properties id="hibernateProperties">
			<prop key="hibernate.jdbc.batch_size">20</prop>
			<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
			<prop key="hibernate.hbm2ddl.auto">create</prop>
			<prop key="hibernate.show_sql">true</prop>
		</util:properties>
	</beans>


</beans>
